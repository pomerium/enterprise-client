#!/bin/bash
set -euo pipefail

_scripts_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
_root_dir="$(dirname "$_scripts_dir")"
_deps_dir="$_root_dir/deps"

function download() {
	local _url="$1"
	local _dst="$2"

	echo "downloading $_url to $_dst"
	curl \
		--silent \
		--compressed \
		--fail \
		--location \
		--time-cond "$_dst" \
		--output "$_dst" \
		"$_url"
}

function download_all() {
	if [ "$(uname -s)" == "Darwin" ]; then
		download "https://github.com/protocolbuffers/protobuf/releases/download/v21.5/protoc-21.5-osx-universal_binary.zip" "$_deps_dir/protoc.zip"
	else
		download "https://github.com/protocolbuffers/protobuf/releases/download/v21.5/protoc-21.5-linux-x86_64.zip" "$_deps_dir/protoc.zip"
	fi
	(cd "$_deps_dir" && unzip -o protoc.zip bin/protoc)
}

function join_by() {
	local IFS="$1"
	shift
	echo "$*"
}

download_all

_imports=()
while read -r _proto; do
	if [[ "$_proto" == envoy/* ]]; then
		_imports+=("M${_proto}=github.com/envoyproxy/go-control-plane/$(dirname "$_proto")")
	elif [[ "$_proto" == xds/* || "$_proto" == udpa/* ]]; then
		_imports+=("M${_proto}=github.com/cncf/xds/go/$(dirname "$_proto")")
	fi
done <"$_deps_dir/github.com/pomerium/pomerium-console/scripts/proto-dependencies.txt"
_import_paths=$(join_by , "${_imports[@]}")

_proto_files=(
	activity_log.proto
	clusters.proto
	devices.proto
	external_data_sources.proto
	key_chain.proto
	namespaces.proto
	policy.proto
	route_health_check.proto
	route_redirect_action.proto
	routes.proto
	settings.proto
	types.proto
	users.proto
)

(
	cd "$_root_dir"

	echo "generating pomerium-console protobuf code"
	"$_deps_dir/bin/protoc" \
		--plugin="protoc-gen-doc=$_scripts_dir/protoc-gen-doc" \
		-I "$_deps_dir" \
		-I "$_deps_dir/github.com/googleapis/googleapis" \
		-I "$_deps_dir/github.com/protocolbuffers/protobuf/src" \
		-I "$_deps_dir/github.com/envoyproxy/protoc-gen-validate" \
		-I "$_deps_dir/github.com/pomerium/pomerium-console/pkg/pb" \
		--doc_out=./ \
		--doc_opt=.template.mustache,API.md \
		"${_proto_files[@]}"
)

for proto_file in "${_proto_files[@]}"; do
	cp -f "$_deps_dir/github.com/pomerium/pomerium-console/pkg/pb/$proto_file" "$_root_dir/protos/pomerium-console/"
done
