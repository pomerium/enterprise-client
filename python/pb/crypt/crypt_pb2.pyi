"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class SealedMessage(google.protobuf.message.Message):
    """A SealedMessage is an encrypted protobuf message."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_ID_FIELD_NUMBER: builtins.int
    DATA_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    MESSAGE_TYPE_FIELD_NUMBER: builtins.int
    ENCRYPTED_MESSAGE_FIELD_NUMBER: builtins.int
    key_id: builtins.str
    """The Curve25519 public key used to encrypt the data encryption key."""
    data_encryption_key: builtins.bytes
    """The XChacha20poly1305 key used to encrypt the data,
    itself stored encrypted by the Curve25519 public key.
    """
    message_type: builtins.str
    """The message type indicates the type of the protobuf message stored encrypted in encrypted_message."""
    encrypted_message: builtins.bytes
    """An arbitrary encrypted protobuf message (marshaled as protojson before encryption)."""
    def __init__(
        self,
        *,
        key_id: builtins.str = ...,
        data_encryption_key: builtins.bytes = ...,
        message_type: builtins.str = ...,
        encrypted_message: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_encryption_key", b"data_encryption_key", "encrypted_message", b"encrypted_message", "key_id", b"key_id", "message_type", b"message_type"]) -> None: ...

global___SealedMessage = SealedMessage

class PublicKeyEncryptionKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    id: builtins.str
    data: builtins.bytes
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        data: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "id", b"id"]) -> None: ...

global___PublicKeyEncryptionKey = PublicKeyEncryptionKey
