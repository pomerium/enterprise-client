"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import envoy.config.core.v3.base_pb2
import envoy.service.auth.v3.attribute_context_pb2
import envoy.type.v3.http_status_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.rpc.status_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class CheckRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ATTRIBUTES_FIELD_NUMBER: builtins.int
    @property
    def attributes(self) -> envoy.service.auth.v3.attribute_context_pb2.AttributeContext:
        """The request attributes."""
    def __init__(
        self,
        *,
        attributes: envoy.service.auth.v3.attribute_context_pb2.AttributeContext | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["attributes", b"attributes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attributes", b"attributes"]) -> None: ...

global___CheckRequest = CheckRequest

class DeniedHttpResponse(google.protobuf.message.Message):
    """HTTP attributes for a denied response."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    HEADERS_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> envoy.type.v3.http_status_pb2.HttpStatus:
        """This field allows the authorization service to send an HTTP response status code to the
        downstream client. If not set, Envoy sends ``403 Forbidden`` HTTP status code by default.
        """
    @property
    def headers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.config.core.v3.base_pb2.HeaderValueOption]:
        """This field allows the authorization service to send HTTP response headers
        to the downstream client. Note that the :ref:`append field in HeaderValueOption <envoy_v3_api_field_config.core.v3.HeaderValueOption.append>` defaults to
        false when used in this message.
        """
    body: builtins.str
    """This field allows the authorization service to send a response body data
    to the downstream client.
    """
    def __init__(
        self,
        *,
        status: envoy.type.v3.http_status_pb2.HttpStatus | None = ...,
        headers: collections.abc.Iterable[envoy.config.core.v3.base_pb2.HeaderValueOption] | None = ...,
        body: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["body", b"body", "headers", b"headers", "status", b"status"]) -> None: ...

global___DeniedHttpResponse = DeniedHttpResponse

class OkHttpResponse(google.protobuf.message.Message):
    """HTTP attributes for an OK response.
    [#next-free-field: 9]
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADERS_FIELD_NUMBER: builtins.int
    HEADERS_TO_REMOVE_FIELD_NUMBER: builtins.int
    DYNAMIC_METADATA_FIELD_NUMBER: builtins.int
    RESPONSE_HEADERS_TO_ADD_FIELD_NUMBER: builtins.int
    QUERY_PARAMETERS_TO_SET_FIELD_NUMBER: builtins.int
    QUERY_PARAMETERS_TO_REMOVE_FIELD_NUMBER: builtins.int
    @property
    def headers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.config.core.v3.base_pb2.HeaderValueOption]:
        """HTTP entity headers in addition to the original request headers. This allows the authorization
        service to append, to add or to override headers from the original request before
        dispatching it to the upstream. Note that the :ref:`append field in HeaderValueOption <envoy_v3_api_field_config.core.v3.HeaderValueOption.append>` defaults to
        false when used in this message. By setting the ``append`` field to ``true``,
        the filter will append the correspondent header value to the matched request header.
        By leaving ``append`` as false, the filter will either add a new header, or override an existing
        one if there is a match.
        """
    @property
    def headers_to_remove(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """HTTP entity headers to remove from the original request before dispatching
        it to the upstream. This allows the authorization service to act on auth
        related headers (like ``Authorization``), process them, and consume them.
        Under this model, the upstream will either receive the request (if it's
        authorized) or not receive it (if it's not), but will not see headers
        containing authorization credentials.

        Pseudo headers (such as ``:authority``, ``:method``, ``:path`` etc), as well as
        the header ``Host``, may not be removed as that would make the request
        malformed. If mentioned in ``headers_to_remove`` these special headers will
        be ignored.

        When using the HTTP service this must instead be set by the HTTP
        authorization service as a comma separated list like so:
        ``x-envoy-auth-headers-to-remove: one-auth-header, another-auth-header``.
        """
    @property
    def dynamic_metadata(self) -> google.protobuf.struct_pb2.Struct:
        """This field has been deprecated in favor of :ref:`CheckResponse.dynamic_metadata
        <envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata>`. Until it is removed,
        setting this field overrides :ref:`CheckResponse.dynamic_metadata
        <envoy_v3_api_field_service.auth.v3.CheckResponse.dynamic_metadata>`.
        """
    @property
    def response_headers_to_add(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.config.core.v3.base_pb2.HeaderValueOption]:
        """This field allows the authorization service to send HTTP response headers
        to the downstream client on success. Note that the :ref:`append field in HeaderValueOption <envoy_v3_api_field_config.core.v3.HeaderValueOption.append>`
        defaults to false when used in this message.
        """
    @property
    def query_parameters_to_set(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.config.core.v3.base_pb2.QueryParameter]:
        """This field allows the authorization service to set (and overwrite) query
        string parameters on the original request before it is sent upstream.
        """
    @property
    def query_parameters_to_remove(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """This field allows the authorization service to specify which query parameters
        should be removed from the original request before it is sent upstream. Each
        element in this list is a case-sensitive query parameter name to be removed.
        """
    def __init__(
        self,
        *,
        headers: collections.abc.Iterable[envoy.config.core.v3.base_pb2.HeaderValueOption] | None = ...,
        headers_to_remove: collections.abc.Iterable[builtins.str] | None = ...,
        dynamic_metadata: google.protobuf.struct_pb2.Struct | None = ...,
        response_headers_to_add: collections.abc.Iterable[envoy.config.core.v3.base_pb2.HeaderValueOption] | None = ...,
        query_parameters_to_set: collections.abc.Iterable[envoy.config.core.v3.base_pb2.QueryParameter] | None = ...,
        query_parameters_to_remove: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dynamic_metadata", b"dynamic_metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dynamic_metadata", b"dynamic_metadata", "headers", b"headers", "headers_to_remove", b"headers_to_remove", "query_parameters_to_remove", b"query_parameters_to_remove", "query_parameters_to_set", b"query_parameters_to_set", "response_headers_to_add", b"response_headers_to_add"]) -> None: ...

global___OkHttpResponse = OkHttpResponse

class CheckResponse(google.protobuf.message.Message):
    """Intended for gRPC and Network Authorization servers ``only``."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DENIED_RESPONSE_FIELD_NUMBER: builtins.int
    OK_RESPONSE_FIELD_NUMBER: builtins.int
    DYNAMIC_METADATA_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> google.rpc.status_pb2.Status:
        """Status ``OK`` allows the request. Any other status indicates the request should be denied, and
        for HTTP filter, if not overridden by :ref:`denied HTTP response status <envoy_v3_api_field_service.auth.v3.DeniedHttpResponse.status>`
        Envoy sends ``403 Forbidden`` HTTP status code by default.
        """
    @property
    def denied_response(self) -> global___DeniedHttpResponse:
        """Supplies http attributes for a denied response."""
    @property
    def ok_response(self) -> global___OkHttpResponse:
        """Supplies http attributes for an ok response."""
    @property
    def dynamic_metadata(self) -> google.protobuf.struct_pb2.Struct:
        """Optional response metadata that will be emitted as dynamic metadata to be consumed by the next
        filter. This metadata lives in a namespace specified by the canonical name of extension filter
        that requires it:

        - :ref:`envoy.filters.http.ext_authz <config_http_filters_ext_authz_dynamic_metadata>` for HTTP filter.
        - :ref:`envoy.filters.network.ext_authz <config_network_filters_ext_authz_dynamic_metadata>` for network filter.
        """
    def __init__(
        self,
        *,
        status: google.rpc.status_pb2.Status | None = ...,
        denied_response: global___DeniedHttpResponse | None = ...,
        ok_response: global___OkHttpResponse | None = ...,
        dynamic_metadata: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["denied_response", b"denied_response", "dynamic_metadata", b"dynamic_metadata", "http_response", b"http_response", "ok_response", b"ok_response", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["denied_response", b"denied_response", "dynamic_metadata", b"dynamic_metadata", "http_response", b"http_response", "ok_response", b"ok_response", "status", b"status"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["http_response", b"http_response"]) -> typing_extensions.Literal["denied_response", "ok_response"] | None: ...

global___CheckResponse = CheckResponse
